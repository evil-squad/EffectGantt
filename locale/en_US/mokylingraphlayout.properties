###############################################################################
# Licensed Materials - Property of IBM
# 5724-Z78
# Â© Copyright IBM Corporation 2007, 2010. All Rights Reserved.
#
# Note to U.S. Government Users Restricted Rights:
# Use, duplication or disclosure restricted by GSA ADP Schedule
# Contract with IBM Corp.
###############################################################################

# These are the properties required for IBM ILOG Elixir Enterprise

# NLS_ENCODING=UTF-8 
# NLS_MESSAGEFORMAT_NONE

#ISMESSAGEFILE TRUE
#COMPONENTPREFIX CWZDF
#COMPONENTNAMEFOR CWZDF IBM ILOG Elixir Enterprise

################################################################
# Property file for circular layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.circular
# Message Range: 6325-6374
################################################################

# Scenario: This error occurs if circular layout is applied in mode
# cluster by ids, but no cluster ids are found in the graph.
# Required action: Specify cluster ids or use a different clustering mode
graphlayout.expert.message.6325E=CWZDF6325E: No cluster found. You must provide clustering information.

# Scenario: This error occurs when the clustering mode property for
# circular layout is set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6326E=CWZDF6326E: Unsupported clustering mode option: {0}.

# Scenario: This error occurs when the cluster id property for
# circular layout is set to null.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6327E=CWZDF6327E: Cluster id must not be null.

# Scenario: This error occurs when the index of a node in a cluster for
# circular layout is set to a negative value.
# Required action: Use a positive value.
graphlayout.expert.message.6328E=CWZDF6328E: Index must not be negative.

# Scenario: This error occurs when information for a cluster of 
# circular layout is queried by an index that does not exist.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6329E=CWZDF6329E: Cluster index {0} must be at least 0 and smaller than the number of clusters ({1}).

# Scenario: This error occurs when information for a null node of 
# circular layout is queried.
# Required action: Choose a different node.
graphlayout.expert.message.6330E=CWZDF6330E: Node must not be null.

# Scenario: This error occurs when information for a node of 
# circular layout is queried, but this node is no longer in the graph.
# Required action: Choose a different node.
graphlayout.expert.message.6331E=CWZDF6331E: Node is not in the attached graph.

# Scenario: This error occurs when information for a node of a cluster of
# circular layout is queried, but this node is not in that cluster.
# Required action: Choose a different node.
graphlayout.expert.message.6332E=CWZDF6332E: Node is not in the cluster {0}.

# Scenario: This error occurs when a layout property of circular layout
# is set to a negative value when only positive values are allowed.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6333E=CWZDF6333E: Negative value {0} not allowed.

# Scenario: This error occurs when the link style parameter
# is set to an unsupported value.
# Required action: Verify that a valid value is used to set
# the link style parameter.
graphlayout.expert.message.6334E = CWZDF6334E: Unsupported \
link style: {0}.

# Scenario: This error occurs when the multilink mode parameter
# is set to an unsupported value.
# Required action: Verify that a valid value is used to set
# the multilink mode parameter.
graphlayout.expert.message.6335E = CWZDF6335E: Unsupported \
multilink mode: {0}.

# Scenario: This error occurs when the value of a spacing property is
# set to a negative value but this spacing property does not support
# negative values.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6336E= CWZDF6336E: Unsupported \
negative value: {0}.




################################################################
# Property file for grid layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.grid
# Message Range: 6375-6399
################################################################


# Scenario: This error occurs when you set the value of the
# property nodeComparatorMode in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to property nodeComparatorMode
# in Grid layout is one of the possible values.
graphlayout.expert.message.6375E= CWZDF6375E: Invalid node comparator mode {0}.


# Scenario: This error occurs when you set the value of the
# property layoutMode in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to property 
# layoutMode in Grid layout is one of the possible values.
graphlayout.expert.message.6376E= CWZDF6376E: Invalid layout mode: {0}.

# Scenario: This error occurs when you set the value of the
# property globalHorizontalAlignment in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to property 
# globalHorizontalAlignment in Grid layout is one of the possible values.
graphlayout.expert.message.6377E= CWZDF6377E: Invalid global horizontal alignment value: {0}.

# Scenario: This error occurs when you set the value of the
# horizontal alignment parameter in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to horizontal 
# alignment parameter in Grid layout is one of the possible values.
graphlayout.expert.message.6378E= CWZDF6378E: Invalid horizontal alignment value: {0}.

# Scenario: This error occurs when you set the value of the
# property globalVerticalAlignment in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to property 
# globalVerticalAlignment in Grid layout is one of the possible values.
graphlayout.expert.message.6379E= CWZDF6379E: Invalid global vertical alignment value: {0}.

# Scenario: This error occurs when you set the value of the
# vertical alignment parameter in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to vertical 
# alignment parameter in Grid layout is one of the possible values.
graphlayout.expert.message.6380E= CWZDF6380E: Invalid vertical alignment value: {0}.

# Scenario: This error occurs when you set the value of the
# index parameter in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to index 
# parameter in Grid layout is one of the possible values.
graphlayout.expert.message.6381E= CWZDF6381E: Invalid index: {0}.

# Scenario: This error occurs when you set the value of the
# horizontal grid offset parameter in a Grid layout to a value
# that is too small.
# Required action: Verify that the value provided to parameter 
# horizontal grid offset is bigger than 0.01.
graphlayout.expert.message.6382E= CWZDF6382E: The value {0} of parameter horizontal grid offset is too small.

# Scenario: This error occurs when you set the value of the
# vertical grid offset parameter in a Grid layout to a value
# that is too small.
# Required action: Verify that the value provided to parameter 
# vertical grid offset is bigger than 0.01.
graphlayout.expert.message.6383E= CWZDF6383E: The value {0} of parameter vertical grid offset is too small.

# Scenario: This error occurs when you set the value of the
# maximum number of nodes per row or column in a Grid layout to a value
# that is lower than one.
# Required action: Verify that the value provided to parameter 
# maxNumberOfNodesPerRowOrColumn is valid.
graphlayout.expert.message.6384E= CWZDF6384E: The maximum number of nodes must be at least 1.





################################################################
# Property file for hierarchical layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.hierarchical
# Message Range: 6400-6449
################################################################

# Scenario: This error occurs a non-supported method is called.
# Required action: This method must not be used.
graphlayout.expert.message.6400E= CWZDF6400E: This operation is not supported.

# Scenario: This error occurs when an infinite loop occurs
# in class Algorithm when breaking the cycles that are not
# self-loops or 2-cycles.
# Required action: Verify that the graph layout model has
# a correct structure. 
graphlayout.expert.message.6401E= CWZDF6401E: An infinite loop has occurred in Algorithm.

# Scenario: This error occurs when an invalid value is specified
# for parameter connector style in Hierarchical layout.
# Required action: Verify that the connector style property
# has a correct value.
graphlayout.expert.message.6402E= CWZDF6402E: Illegal connector style value.

# Scenario: This error occurs when trying to iterate over the
# nodes of a link instance.
# Required action: Verify that the graph layout model has been
# correctly created.
graphlayout.expert.message.6403E= CWZDF6403E: This operation must not occur with a link argument.

# Scenario: This error occurs when you can no longer iterate over
# the list of segments.
# Required action: Verify that the graph layout model has been
# correctly created.
graphlayout.expert.message.6404E= CWZDF6404E: Reached the end of the list of segments.

# Scenario: This error occurs when the graph layout model contains
# objects that are neither nodes or links.
# Required action: Verify that the graph layout model has been
# correctly created.
graphlayout.expert.message.6405E= CWZDF6405E: Object must be a node or a segment.

# Scenario: This error occurs when the flow direction property is
# set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6406E= CWZDF6406E: Unsupported flow direction option: {0}.

# Scenario: This error occurs when the leveling strategy property is
# set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6407E= CWZDF6407E: Unsupported leveling strategy value: {0}.

# Scenario: This error occurs when the level justification property is
# set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6408E= CWZDF6408E: Unsupported level justification value: {0}.

# Scenario: This error occurs when the connector style property is
# set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6409E= CWZDF6409E: Unsupported connector style value: {0}.

# Scenario: This error occurs when the global link style property is
# set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6410E= CWZDF6410E: Unsupported global link style value: {0}.

# Scenario: This error occurs when the link style property is
# set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6411E= CWZDF6411E: Unsupported link style value: {0}.

# Scenario: This error occurs when the value of a spacing property is
# set to a negative value but this spacing property does not support
# negative values.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6412E= CWZDF6412E: Unsupported negative value: {0}.

# Scenario: This error occurs when the value of aperture angle property
# is set to an invalid value.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6413E= CWZDF6413E: Aperture angle must be between 10 and 90.

# Scenario: This error occurs when the side used to specify the number
# of ports in a node is invalid.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6414E= CWZDF6414E: Unsupported node side option: {0}.

# Scenario: This error occurs when value of the origin point mode property
# is invalid.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6415E= CWZDF6415E: Unsupported origin point mode value: {0}.

# Scenario: This error occurs when value of the destination point mode property
# is invalid.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6416E= CWZDF6416E: Unsupported destination point mode value: {0}.

# Scenario: This error occurs when value of the property
# incrementalAbsoluteLevelPositionTendency is invalid.
# Required action: Verify that a value between 0 and 100 is used.
graphlayout.expert.message.6417E= CWZDF6417E: Unsupported value {0} for property incrementalAbsoluteLevelPositionTendency. Value must be between 0 and 100.

# Scenario: This error occurs when value of the property
# incrementalNodeMovementMode is invalid.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6418E= CWZDF6418E: Unsupported value {0} for mode.





################################################################
# Property file for long link layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.longlink
# Message Range: 6550-6599
################################################################

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter horizontalGridOffset to a negative
# or zero value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6550E= CWZDF6550E: Negative or zero \
horizontal grid offset in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter verticalGridOffset to a negative
# or zero value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6551E= CWZDF6551E: Negative or zero \
vertical grid offset in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter horizontalGridBase to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6552E= CWZDF6552E: Negative horizontal \
base coordinate of the grid in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter verticalGridBase to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6553E= CWZDF6553E: Negative vertical \
base coordinate of the grid in Long Link Layout {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter horizontalMinOffset to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6554E= CWZDF6554E: Negative minimum \
horizontal offset in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter verticalMinOffset to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6555E= CWZDF6555E: Negative minimum \
vertical offset in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter minNodeCornerOffset to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6556E= CWZDF6556E: Negative minimum \
node corner offset in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter minStartSegmentLength to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6557E= CWZDF6557E: Negative minimum \
start segment length in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter minEndSegmentLength to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6558E= CWZDF6558E: Negative minimum \
end segment length in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter allowedTime per link to a negative
# or zero value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6559E= CWZDF6559E: Allowed time in Long \
Link Layout cannot be negative or zero!

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter maxBacktrack to a negative
# value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6560E= CWZDF6560E: Negative \
maximum number of backtrack steps in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of
# Long Link Layout parameter globalLinkStyle to an invalid value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6561E= CWZDF6561E: Unsupported \
link style in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of Long
# Link Layout parameter link style for a specific link instance
# to an invalida value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6562E= CWZDF6562E: Unsupported \
link style parameter value for a link instance in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of Long
# Link Layout parameter link style for a specific link instance
# to an invalid value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6563E= CWZDF6563E: Negative number \
of crossing iterations in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of Long
# Link Layout parameter globalOriginPointMode to an invalid value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6564E= CWZDF6564E: Unsupported \
mode for the connection point of the links on the origin nodes \
in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of Long
# Link Layout parameter globalDestinationPointMode to an invalid value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6565E= CWZDF6565E: Unsupported \
mode for the connection point of the links on the destination nodes \
in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of Long
# Link Layout parameter origin point mode of a specific link
# instance to an invalid value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6566E= CWZDF6566E: Unsupported \
mode for the connection point of a link instance on the origin node \
in Long Link Layout: {0}.

# Scenario: This error occurs when setting the value of Long
# Link Layout parameter destination point mode of a specific link
# instance to an invalid value.
# Required action: Verify that property is set to an appropriate value.
graphlayout.expert.message.6567E= CWZDF6567E: Unsupported \
mode for the connection point of a link instance on the destination node \
in Long Link Layout: {0}.

# Scenario: This error occurs when adding a line obstacle
# whose bounds do not correspond to a line. A line has either
# the width or the height as 0.
# Required action: Verify that the obstacle being added is correct.
graphlayout.expert.message.6568E= CWZDF6568E: Line obstacle \
must have zero width or zero height in Long Link Layout.






################################################################
# Property file for short link layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.shortlink
# Message Range: 6600-6649
################################################################

# Scenario: This errors occurs when there are no links to be
# routed by Short Link layout.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6600E = CWZDF6600E: Combinatorial \
optimization variables cannot be null in Short Link Layout.

# Scenario: This error occurs when counting the crossings between
# link and the other links and nodes but the link data is not available.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6601E = CWZDF6601E: Link data cannot \
be null in Short Link Layout.

# Scenario: This error occurs when the link data created by
# Short Link layout to represent a link is missing the shape
# information.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6602E = CWZDF6602E: Link data is \
missing shape information in Short Link Layout.

# Scenario: This error occurs when the Short link layout is
# computing the new link shape and the link has only two points.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6603E = CWZDF6603E: Cannot refine \
a link with less than three points in Short Link Layout.

# Scenario: This error occurs when the incremental link reshape
# model parameter is configured with an invalid value in 
#Short link layout.
# Required action: Verify that incremental link reshape mode is
# correctly set.
graphlayout.expert.message.6604E = CWZDF6604E: Unexpected \
incremental link reshape mode in Short Link Layout: {0}.

# Scenario: This error occurs when start node or end node
# is not correctly specified in Short link layout.
# Required action: Verify that the graph layout model is correct.
graphlayout.expert.message.6605E = CWZDF6605E: Link from or \
to node side cannot be null in Short Link Layout.

# Scenario: This error occurs Short link layout is not able
# to find allowed link shapes for the links in the model.
# Required action: Verify that the graph layout model is correct.
graphlayout.expert.message.6606E = CWZDF6606E: Short Link \
Layout is not able to find allowed link shapes for the links.

# Scenario: This error occurs when trying to retrieve the 
# link shapes before having computed them in Short link layout. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6607E = CWZDF6607E: Shape types need to be \
calculated prior to retrieving their values in Short Link Layout.

# Scenario: This error occurs when trying to retrieve the 
# link shape based on an index that is equal or greater to
# the maximum index. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6608E = CWZDF6608E: Shape type index {0} is equal \
or greater than the available number of shape types {1} in Short Link Layout.

# Scenario: This error occurs when trying to retrieve link information
# and the link has less than two points specifying its path.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6609E = CWZDF6609E: Link has less than \
two points: {0}.

# Scenario: This error occurs when applying an offset to the 
# points of this link but the number of link points is not
# the same as the number of points to which the offset will
# be applied.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6610E = CWZDF6610E: Cannot apply an \
offset if number of points differ: {0} and {1}.

# Scenario: This error occurs when applying an offset to the 
# points of this link but the number of master bend points is not
# the same as the number of bends.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6611E = CWZDF6611E: Cannot apply an \
offset if the length of masterBendPoints ({0}) is smaller than \
the number of bends {1}.

# Scenario: This error occurs when applying an offset 
# to a horizontal or vertical segment but the link is not
# orthogonal.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6612E = CWZDF6612E: ApplyOrthogonalOffset \
can only be applied to orthogonal shapes.

# Scenario: This error occurs when asking to restore the link
# shape on slave links.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6613E = CWZDF6613E: Internal error: \
This method cannot be called for slave links.

# Scenario: This error occurs when asking information about link 
# end points prior to setting the end points in the link.
# Required action: Verify that link has correct end points specified
# before querying end point information.
graphlayout.expert.message.6614E = CWZDF6614E: From node side \
must be specified prior to querying information about start and \
end nodes in a link.

# Scenario: This error occurs when asking if a link intersects \
# with itself.
# Required action: Verify that the correct link argument is used
# when querying intersection information.
graphlayout.expert.message.6615E = CWZDF6615E: Cannot request \
intersection information for the same link.

# Scenario: This error occurs when the Short Link Layout is null \
# during layout execution.
# Required action: Verify that the correct link layout is used.
graphlayout.expert.message.6616E = CWZDF6616E: Short Link Layout \
cannot be null.

# Scenario: This error occurs when the Short Link Layout creates a \
# link shape for a certain link with a negative number of bends.
# Required action: This is an internal error. Contact support for
# assistance.
graphlayout.expert.message.6617E = CWZDF6617E: Maximum number of bends \
cannot be negative: {0}.

# Scenario: This error occurs when creating a Link Data that is 
# not a fixed link.
# Required action: This is an internal error. Contact support for
# assistance.
graphlayout.expert.message.6618E = CWZDF6618E: This operation can \
only be used by fixed links.

# Scenario: This error occurs when creating a Link Data that is 
# a multiple link bundle.
# Required action: This is an internal error. Contact support for
# assistance.
graphlayout.expert.message.6619E = CWZDF6619E: This operation \
is not intended for multilink bundles.

# Scenario: This error occurs when a subclass of IGraphLayoutModel
# is created which does not implement method getLinkPoints correctly.
# Required action: Verify that you correctly implement method
# getLinkPoints in your graph layout model implementation.
graphlayout.expert.message.6620E = CWZDF6620E: The method \
getLinkPoints called on {0} for the link {1} returned an array \
of length {2}, while it must return an array of length at least 2.

# Scenario: This error occurs when retrieving a link point based
# on an index and the index argument is out of bounds.
# Required action: Verify that the correct argument is used in the
# method call.
graphlayout.expert.message.6621E = CWZDF6621E: Array index out \
of bounds when retrieving a link point.


# Scenario: This error occurs when an incorrect link shape is produced.
# Required action: This is an internal error. Contact support for
# assistance.
graphlayout.expert.message.6622E = CWZDF6622E: Internal error: \
expected quasi self-intergraph link.

# Scenario: This error occurs the node side when the link is
# connected is not supported.
# Required action: Verify that you use a value node side value.
graphlayout.expert.message.6623E = CWZDF6623E: Unsupported node side {0} \
in Short Link Layout.

# Scenario: This error occurs the self link style specified for a
# link is not supported.
# Required action: Verify that you use a valid self link style value.
graphlayout.expert.message.6624E = CWZDF6624E: Unsupported self \
link style {0} in Short Link Layout.

# Scenario: This error occurs when the filter that is set on the
# Short Link Layout has rejected all possible combinations of node
# side for a link.
# Required action: Verify that the node side filter is correctly 
# implemented.
graphlayout.expert.message.6625E = CWZDF6625E: The node side filter \
has rejected all the combinations of node side for the link.

# Scenario: This error occurs when the link is fixed to a 
# destination side that is not one of the possible values. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6626E = CWZDF6626E: Unsupported destination side: {0}.

# Scenario: This error occurs when the link is fixed to a
# origin side that is not one of the possible values. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6627E = CWZDF6627E: Unsupported origin side: {0}.

# Scenario: This error occurs when the link is fixed to a
# origin side that is not one of the possible values. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6628E = CWZDF6628E: Unsupported \
fixed origin side: {0}.

# Scenario: This error occurs when the link is fixed to a
# destination side that is not one of the possible values. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6629E = CWZDF6629E: Unsupported \
fixed destination side: {0}.

# Scenario: This error occurs when querying the node side to 
# which <code>point</code> is the closest. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6630E = CWZDF6630E: Unsupported \
node side in Short Link Layout: {0}.

# Scenario: This error occurs when the number of points in 
# the link is not enough to allow the Short Link Layout
# algorithm to refine its shape. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6631E = CWZDF6631E: Cannot refine \
a link with less than three points.


# Scenario: This error occurs when the Short Link Layout
# algorithm is trying to layout fixed links when there are
# no fixed links in the model. 
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6632E = CWZDF6632E: Internal error: This operation should not be called when there are no links with fixed connection.


# Scenario: This error occurs when the value of parameter
# globalLinkStyle in Short Link Layout is not in the list of
# possible values.
# Required action: Verify that the correct value is used for
# the parameter.
graphlayout.expert.message.6633E = CWZDF6633E: Unsupported \
global link style in Short Link Layout: {0}. 

# Scenario: This error occurs when the value of parameter
# globalLinkStyle in Short Link Layout is not in the list of
# possible values.
# Required action: Verify that the correct value is used for
# the parameter.
graphlayout.expert.message.6634E = CWZDF6634E: Unsupported \
individual link style {0} for link {1} in Short Link Layout. 


# Scenario: This error occurs when information about a node
# is not found in Short Link Layout.
# Required action: This is an internal error. Contact support for
# assistance.
graphlayout.expert.message.6635E = CWZDF6635E: Internal error: Node data was not found.


# Scenario: This error occurs when a link that is not a multilink
# data indicates that is it a master link. 
# Required action: This is an internal error. Contact support for
# assistance.
graphlayout.expert.message.6636E = CWZDF6636E: Internal error: \
isMaster returns true on {0}.

# Scenario: This error occurs when the global or individual
# origin point mode parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout origin point mode.
graphlayout.expert.message.6637E = CWZDF6637E: Unsupported \
origin point mode in Short Link Layout: {0}.
 
# Scenario: This error occurs when the global or individual 
# destination point mode parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout destination point mode.
graphlayout.expert.message.6638E = CWZDF6638E: Unsupported \
destination point mode in Short Link Layout: {0}.

# Scenario: This error occurs when the global link style
# parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout global link style.
graphlayout.expert.message.6639E = CWZDF6639E: Unsupported \
global link style in Short Link Layout: {0}.

# Scenario: This error occurs when the individual link style
# parameter for a link instance is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout link style for individual links.
graphlayout.expert.message.6640E = CWZDF6640E: Unsupported \
individual link style in Short Link Layout: {0}.

# Scenario: This error occurs when the global self link style
# parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout global self link style.
graphlayout.expert.message.6641E = CWZDF6641E: Unsupported \
self link style in Short Link Layout: {0}.

# Scenario: This error occurs when the connector style
# parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout connector style.
graphlayout.expert.message.6642E = CWZDF6642E: Unsupported \
connector style in Short Link Layout: {0}.

# Scenario: This error occurs when the evenlySpacedPinsMarginRatio
# parameter is set to a negative value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout evenlySpacedPinsMarginRatio.
graphlayout.expert.message.6643E = CWZDF6643E: Evenly spaced \
pins margin ratio must not be negative in Short Link Layout: {0}.

# Scenario: This error occurs when the linkBundlesMode
# parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout linkBundlesMode.
graphlayout.expert.message.6644E = CWZDF6644E: Unsupported \
link bundles mode in Short Link Layout: {0}.

# Scenario: This error occurs when the globalIncrementalUnmodifiedLinkReshapeMode
# parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout globalIncrementalUnmodifiedLinkReshapeMode.
graphlayout.expert.message.6645E = CWZDF6645E: Unsupported \
globalIncrementalUnmodifiedLinkReshapeMode property in Short Link Layout: {0}.

# Scenario: This error occurs when the individual 
# incrementalUnmodifiedLinkReshapeMode parameter is set 
# to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout incrementalUnmodifiedLinkReshapeMode
# for individual links.
graphlayout.expert.message.6646E = CWZDF6646E: Unsupported \
incrementalUnmodifiedLinkReshapeMode property in Short Link Layout: {0}.

# Scenario: This error occurs when the globalIncrementalModifiedLinkReshapeMode
# parameter is set to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout globalIncrementalModifiedLinkReshapeMode.
graphlayout.expert.message.6647E = CWZDF6647E: Unsupported \
globalIncrementalModifiedLinkReshapeMode property in Short Link Layout: {0}.

# Scenario: This error occurs when the individual 
# incrementalModifiedLinkReshapeMode parameter is set 
# to an invalid value. 
# Required action: Verify that you have correctly configured
# the Short Link Layout incrementalModifiedLinkReshapeMode
# for individual links.
graphlayout.expert.message.6648E = CWZDF6648E: Unsupported \
incrementalModifiedLinkReshapeMode property in Short Link Layout: {0}.

# Scenario: This error occurs when the maximum number of
# iterations configured is negative.
# Required action: Verify that you have correctly configured
# the Short Link Layout maximum number of iterations.
graphlayout.expert.message.6649E = CWZDF6649E: Negative \
maximum number of iterations of the Short Link Layout: {0}.



# Message ranges
#
# mokylin.views.graphlayout  6000 - 6259 (lots free)
# genericquadtree         6260 - 6279
# rowcolumngrid           6280 - 6299
# bus                     6300 - 6324
# circular                6325 - 6374
# grid                    6375 - 6399
# hierarchical            6400 - 6449
# multiple                6450 - 6459
# random                  6460 - 6469
#
# link                    6475 - 6499 (not yet)
# longlink                6550 - 6599
# shortlink               6600 - 6674
# recursive               6675 - 6699
# tree                    6700 - 6749
# uniform                 6750 - 6774
# topomesh                6775 - 6799 (not yet)
# labellayout             6800 - 6899 (not yet)
# labellayout.annealing   6900 - 6949 (not yet)
# labellayout.random      6950 - 6960 (not yet)




################################################################
# Property file for graph layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout
# Message Range: 6000-6102
################################################################


# Scenario: This error occurs when you are trying to use the same
# Graph Layout Model for the top level graph and for a subgraph.
# Each subgraph has to be associated to a specific Graph Layout model
# which contains only the objects that are pertinent to the subgraph.
# The graph layout model of a subgraph is retrieved using the method
# IGraphLayoutModel.getGraphModel(subgraph:Object). This method should
# be implemented in such a way that each subgraph has its own graph
# layout model.
# Required action: Validate that the Graph Layout model used for
# subgraphs is not the reused by other subgraphs or the top level graph.
graphlayout.expert.message.6000E = CWZDF6000E: The root model cannot be reused for subgraphs.

# Scenario: This error occurs when a class has not implemented a
# mandatory method. 
# Required action: Implement the method in the required class.
graphlayout.expert.message.6001E = CWZDF6001E: A concrete implementation for method {0} must be provided.
 
# Scenario: This error occurs when method AbstractGraphLayoutModel.getGraphModel()
# is called with a null argument.
# Required action: Verify that the argument of the method call is correct.
graphlayout.expert.message.6002E = CWZDF6002E: The subgraph parameter must not be null.

# Scenario: This error occurs when method getGraphModel() is called on a
# model that has already been disposed.
# Required action: Verify that the model is no longer used after being disposed.
graphlayout.expert.message.6003E = CWZDF6003E: Method getGraphModel() called on a disposed model.

# Scenario: This error occurs when method getGraphModel() is called on a
# model whose root model has already been disposed.
# Required action: Verify that the root model and any of its sub-models are 
# no longer used after being disposed.
graphlayout.expert.message.6004E = CWZDF6004E: Method getGraphModel() called on a model whose root model has already been disposed.

# Scenario: This error occurs when method AbstractGraphLayoutModel.createGraphModel
# returned a null model for a given subgraph.
# Required action: Verify that the root model and any of its sub-models are 
# no longer used after being disposed.
graphlayout.expert.message.6005E = CWZDF6005E: Method createGraphModel() returned null on {0} for subgraph {1}.

# Scenario: This error occurs when method AbstractGraphLayoutModel.createGraphModel
# returned a null model for a given subgraph.
# Required action: Verify that the root model and any of its sub-models are 
# no longer used after being disposed.
graphlayout.expert.message.6006E = CWZDF6006E: Method createGraphModel() returned a disposed model on {0} for subgraph {1}.

# Scenario: This error occurs when method AbstractGraphLayoutModel.createGraphModel
# returned a model where the parent graph layout model does not contain the
# subgraph.
# Required action: Verify that the implementation of createGraphModel is correct.
# The graph layout model of a subgraph must have the parent graph layout model set
# as parent. And the parent graph layout model must contain the subgraph object as
# one of its nodes.
graphlayout.expert.message.6007E = CWZDF6007E: The subgraph must be a node in the parent graph model.

# Scenario: This error occurs when method AbstractGraphLayoutModel.getGraphModel
# is able to retrieve the model for the given subgraph, but this model has
# already been disposed.
# Required action: Verify that a model is no longer used after being disposed.
graphlayout.expert.message.6008E = CWZDF6008E: The graph model stored for {1} on {0} is disposed.

# Scenario: This error occurs when a class implemented has not correctly
# implemented a property acessor. 
# Required action: Implement the property in the concrete class.
graphlayout.expert.message.6009E = CWZDF6009E: A concrete implementation for property {0} must be provided.

# Scenario: This error occurs when method getOpposite() is called with
# a node argument which is neither the start node nor the end node of the given link.
# Required action: Verify that the graph layout model structure is correct
# and that the given node argument is valid.
graphlayout.expert.message.6010E = CWZDF6010E: Node is neither the node of origin, nor the destination node.

# Scenario: This error occurs when method AbstractGraphLayoutModel.getNeighbors() is
# called with a null argument.
# Required action: Verify that argument is valid.
graphlayout.expert.message.6011E = CWZDF6011E: Node argument must not be null.



# Scenario: This error occurs when you pass a null graph layout model
# to an API.
# This error is thrown by 
# com.ibm.mokylin.elixir.diagram.graphlayout.DefaultLayoutProvider
# and com.ibm.mokylin.elixir.diagram.graphlayout.GraphLayout
# Required action: Verify that the correct graph layout model is used.
#
graphlayout.expert.message.6012E = CWZDF6012E: Graph model cannot be null.
 
# Scenario: This error occurs when you set a preferred layout associated to
# a graph layout model that has already been disposed. This error is thrown
# by com.ibm.mokylin.elixir.diagram.graphlayout.DefaultLayoutProvider.
# Required action: Verify that the correct graph layout model is used.
graphlayout.expert.message.6013E = CWZDF6013E: You cannot set the preferred \
layout for a graph model that is already disposed.

# Scenario: This error occurs when you set a preferred layout associated to
# a graph layout model which does not correspond to the graph layout that
# was originally used to create the graph layout model. This error is thrown
# by com.ibm.mokylin.elixir.diagram.graphlayout.DefaultLayoutProvider.
# Required action: Verify that the correct graph layout model is used.
graphlayout.expert.message.6014E = CWZDF6014E: Should not be called for a \
model internally created by another layout; {0} has been created by {1} not by \
the specified preferred layout: {2}

# Scenario: This error occurs when you retrieve a graph layout associated
# to a graph layout model but the graph layout is attached to another
# graph layout model that has already been disposed. This error occurs
# when there is misuse of dispose and detach. This error is thrown
# by com.ibm.mokylin.elixir.diagram.graphlayout.DefaultLayoutProvider.
# Required action: Verify the correct use of dispose when handling
# graph layout model instances.
graphlayout.expert.message.6015E = CWZDF6015E: The preferred layout is \
attached to a disposed graph layout model. You should detach the layout before \
disposing any graph layout model.
 
# Scenario: This error occurs when trying to attach a graph layout model
# to a graph layout instance and the graph layout model has been internally
# created by another layout instance.
# Required action: Verify that the correct graph layout model instance
# is used.
graphlayout.expert.message.6016E = CWZDF6016E: Cannot attach an internally created model: {0}.

# Scenario: When a layout instance is controlled by IlvDefaultLayoutProvider,
# the provider registers itself on the layout, in order to allow
# the layout to perform cleaning operations in the detach method. This error 
# occurs when the layout provider has been registered with an invalid value.
# This is an internal error.
# Required action: Contact support for assistance.
#
graphlayout.expert.message.6017E = CWZDF6017E: Illegal situation.

# Scenario: This error occurs when a method of the class GraphLayout
# is used but the graph layout model attached to the graph layout
# instance has not been specified.
# Required action: Verify that a valid graph layout model is used.
graphlayout.expert.message.6018E = CWZDF6018E: No attached graph layout model \
or the graph layout model is null.

# Scenario: This error occurs when trying to perform a graph layout
# but the graph layout is still performing a previous request.
# Required action: Perform a graph layout only when the previous graph
# layout execution has ended.
graphlayout.expert.message.6019E = CWZDF6019E: You cannot start this layout \
while it is still running.

# Scenario: This error occurs when the graph layout does not succeed
# in creating a graph layout report.
# Required action: Verify that method createLayoutReport is correctly implemented.
graphlayout.expert.message.6020E = CWZDF6020E: Failed to create the layout report.

# Scenario: This error occurs when graph layout incorrectly believe that
# there are several connected components when in fact there is only one.
# Required action: Verify that the contents of the graph layout model is correct.
graphlayout.expert.message.6021E = CWZDF6021E: Unexpected number (too small) of \
connected components: {0}.

# Scenario: This error occurs when a new graph layout algorithm is implemented
# without overriding method layout.
# Required action: Implement method layout in the GraphLayout subclass.
graphlayout.expert.message.6022E = CWZDF6022E: This method must be overridden by subclasses.

# Scenario: This error occurs when an invalid value is used to set property
# GraphLayout.coordinatesMode.
# Required action: Verify that the value used to set property GraphLayout.coordinatesMode is among the possible values.
graphlayout.expert.message.6023E = CWZDF6023E: Unsupported coordinates mode: {0}.

# Scenario: This error occurs when trying to tell the graph layout to
# preserve node position when layout does not support this feature.
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6024E = CWZDF6024E: This layout class does not \
support fixed nodes preservation.

# Scenario: This error occurs when trying to tell the graph layout to
# preserve link position when layout does not support this feature.
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6025E = CWZDF6025E: This layout class does not \
support fixed links preservation.

# Scenario: This error occurs when trying to tell the graph layout to
# handle connected components when layout does not support this feature.
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6026E = CWZDF6026E: This layout class does not \
support the connected components layout mechanism.

# Scenario: This error occurs when trying to tell the graph layout to
# handle a specific layout region when layout does not support this feature.
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6027E = CWZDF6027E: This layout class does not \
support the layout region mechanism.

# Scenario: This error occurs when trying to tell the graph layout to
# use a random generator seed value when layout does not support this feature.
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6028E = CWZDF6028E: This layout class does not \
support the random generator seed value mechanism.

# Scenario: This error occurs when trying to tell the graph layout to
# respect an allowed time configuration when layout does not support this feature.
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6029E = CWZDF6029E: This layout class does not \
support the allowed time mechanism.

# Scenario: This error occurs when trying to set a negative value to
# property GraphLayout.allowedTime.
# Required action: Verify that property allowedTime is assigned to a positive value.
graphlayout.expert.message.6030E = CWZDF6030E: Negative value for allowed time is not supported.

# Scenario: This error occurs when trying to tell the graph layout to
# use a link connection box provider when the layout does not support this feature. 
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6031E = CWZDF6031E: This layout class does not \
support the link connection box mechanism.

# Scenario: This error occurs when trying to tell the graph layout to
# use the spline routing feature when the layout does not support this feature. 
# Required action: Verify that the layout used is the correct one.
graphlayout.expert.message.6032E = CWZDF6032E: This layout class does not \
support the generic optimized spline routing mechanism.

# Scenario: This error occurs when property GraphLayout.minSplineCurveSize
# is set to a negative value.
# Required action: Verify that a valid value is used when specifying property GraphLayout.minSplineCurveSize
graphlayout.expert.message.6033E = CWZDF6033E: Negative minimal spline curve size: {0}.

# Scenario: This error occurs when property GraphLayout.maxSplineCurveSize
# is set to a negative value.
# Required action: Verify that a valid value is used when specifying property GraphLayout.maxSplineCurveSize
graphlayout.expert.message.6034E = CWZDF6034E: Negative maximum spline curve size: {0}.

# Scenario: This error occurs when property GraphLayout.balanceSplineCurveThreshold
# is set to a negative value.
# Required action: Verify that a valid value is used when specifying property 
# GraphLayout.balanceSplineCurveThreshold
graphlayout.expert.message.6035E = CWZDF6035E: Negative balance spline curve threshold: {0}. 

# Scenario: This error occurs when property GraphLayout.balanceSplineCurveThreshold
# is set to a negative value.
# Required action: Verify that a valid value is used when specifying property 
# GraphLayout.balanceSplineCurveThreshold
graphlayout.expert.message.6036E = CWZDF6036E: Invalid layout region mode: {0}.

# Scenario: This error occurs when the layout provider instance which will
# return the layout instances used during a recursive layout has not been
# specified.
# Required action: Verify that a valid layout provider is specified. 
graphlayout.expert.message.6037E = CWZDF6037E: Layout provider cannot be null.

# Scenario: This error occurs when several requests to perform a layout
# recursivelly occur for the same model.
# Required action: Verify that a layout request occurs only when
# the previous layout has already finished.
graphlayout.expert.message.6038E = CWZDF6038E: A recursive layout has been \
already started for {0}.

# Scenario: This error occurs when a model cannot be created for a 
# connected component.
# Required action: Verify that the graph layout model is a 
# subclass of AbstractGraphLayoutModel which an appropriate
# implementation for method createGraphModel.
graphlayout.expert.message.6039E = CWZDF6039E: Cannot create a graph layout \
model for a connected component.

# Scenario: This error occurs when adding a node to a graph
# layout model which already contains the node instance.
# Required action: Verify that the graph layout model is
# correctly implemented.
graphlayout.expert.message.6040E = CWZDF6040E: Node {0} is already contained \
in graph layout model {1}.

# Scenario: This error occurs when adding a link to a graph
# layout model which already contains the link instance.
# Required action: Verify that the graph layout model is
# correctly implemented.
graphlayout.expert.message.6041E = CWZDF6041E: Link {0} is already contained \
in graph layout model {1}.

# Scenario: This error occurs when a model cannot be created for a 
# subgraph.
# Required action: Verify that the graph layout model is a 
# subclass of AbstractGraphLayoutModel which an appropriate
# implementation for method createGraphModel.
graphlayout.expert.message.6042E = CWZDF6042E: Cannot create a graph layout model for a subgraph.

# Scenario: This error occurs when querying link related 
# information from a graph layout model that does not contain
# any link.
# Required action: Verify that the graph layout model has
# been correctly created. 
graphlayout.expert.message.6043E = CWZDF6043E: The graph layout model does not contain any link.

# Scenario: This error occurs when verifying if a layout is
# not attached to any model when using methods that require
# the graph model in order to know the structure of the graph.
# Required action: Attach the correct graph layout model to the
# graph layout instance before calling the method.
graphlayout.expert.message.6044E = CWZDF6044E: Graph layout is not attached to any graph layout model. 

# Scenario: This error occurs when verifying if a given graph
# layout model has a tree structure, but the given start node
# has not been correctly specified.
# Required action: Verify that the correct parameters are
# passed as arguments to the method.
graphlayout.expert.message.6045E = CWZDF6045E: Start node cannot be null. 

# Scenario: This error occurs when an error occurs during
# connectivity test.
# Required action: Verify that graph layout model has been
# correctly created.
graphlayout.expert.message.6046E = CWZDF6046E: Internal error during connectivity test. There are {0} nodes in a connected component and only {1} nodes in the graph layout model {2}.
 
# Scenario: This error occurs when a method can not be
# executed with an empty graph layout model.
# Required action: Verify that the graph layout model has been
# correctly created.
graphlayout.expert.message.6047E = CWZDF6047E: This operation cannot be performed for empty graphs.

# Scenario: This error occurs when trying to configure parameters
# to a null node or link instance.
# Required action: Verify that the correct values are used
# as argument for the method.
graphlayout.expert.message.6048E = CWZDF6048E: The object cannot be null.

# Scenario: This error occurs when trying to configure parameters
# to a node or link instance that is not part of the attached
# graph layout model.
# Required action: Verify that the correct values are used
# as argument for the method.
graphlayout.expert.message.6049E = CWZDF6049E: The object {0} must be a node \
or a link in the attached graph layout model {1}.

# Scenario: This error occurs when trying to access parameters
# to a null node instance.
# Required action: Verify that the correct value is used
# as argument for the method.
graphlayout.expert.message.6050E = CWZDF6050E: The node cannot be null.

# Scenario: This error occurs when trying to access parameters
# to a null link instance.
# Required action: Verify that the correct value is used
# as argument for the method.
graphlayout.expert.message.6051E = CWZDF6051E: The link cannot be null.

# Scenario: This error occurs when a non-supported method is called.
# Required action: This method must not be used.
graphlayout.expert.message.6058E = CWZDF6058E: This operation is not supported.

# Scenario: This error occurs when a request to retrieve  
# information about biconnected components of the graph
# is performed prior to the execution of the algorithm that
# identifies the biconnected components.
# Required action: Verify that the algorithm is run before querying 
# biconnected components information.
graphlayout.expert.message.6059E = CWZDF6059E: The algorithm must be \
performed prior to querying information about biconnected components \
of the graph.

# Scenario: This error occurs when a request to retrieve  
# information about biconnected components of the graph
# is performed prior to the execution of the algorithm that
# identifies the biconnected components.
# Required action: Verify that the algorithm is run before querying 
# biconnected components information.
graphlayout.expert.message.6060E = CWZDF6060E: Initial partition is not yet created.

# Scenario: This error occurs when a request to iterate over a
# list is performed, but there are no more elements.
# Required action: Verify that the list is correct.
graphlayout.expert.message.6061E = CWZDF6061E: There are no more elements.

# Scenario: This error occurs when a request to retrieve a property
# from a link is performed on a non-link object.
# Required action: Verify that the argument of the method is a link
graphlayout.expert.message.6062E = CWZDF6062E: The argument of the method is not a link.

# Scenario: This error occurs when a request to retrieve a property
# from a node is performed on a non-node object.
# Required action: Verify that the argument of the method is a link
graphlayout.expert.message.6063E = CWZDF6063E: The argument of the method is not a node.

# Scenario: This error occurs when a link is in a graph, but its start node
# or end node is not.
# Required action: Verify that the graph is correctly created.
graphlayout.expert.message.6064E = CWZDF6064E: Link start node and end node must be in the graph.

# Scenario: This error occurs when a link is in a graph, but its start node
# is not.
# Required action: Verify that the graph is correctly created.
graphlayout.expert.message.6065E = CWZDF6065E: Start node of link must be in the graph.

# Scenario: This error occurs when a link is in a graph, but its end node
# is not.
# Required action: Verify that the graph is correctly created.
graphlayout.expert.message.6066E = CWZDF6066E: End node of link must be in the graph.

# Scenario: This error occurs when an object is used as argument of a method
# but it is neither a node nor a link in a graph.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6067E = CWZDF6067E: Object is neither a node nor a link.

# Scenario: This error occurs when a node that is used as argument
# of a method is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6068E = CWZDF6068E: Node is null.

# Scenario: This error occurs when a node that is used as argument
# of a method is not part of the graph being analyzed.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6069E = CWZDF6069E: Node is not a node of this graph.

# Scenario: This error occurs when a graph that is used as argument
# of a method is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6070E = CWZDF6070E: Graph argument is null.

# Scenario: This error occurs when a link that is used as argument
# of a method is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6071E = CWZDF6071E: Link argument is null.

# Scenario: This error occurs when a link that is used as argument
# of a method is not part of the graph being analyzed.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6072E = CWZDF6072E: Link is not part of this graph.

# Scenario: This error occurs when a node that is used as argument
# of a method is not the start node or the end node of the link.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6073E = CWZDF6073E: Node is neither the start node nor the end node of the link.

# Scenario: This error occurs when setting the bounds to a node to
# a null value.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6074E = CWZDF6074E: Node bounds cannot be null.

# Scenario: This error occurs when querying values of a model
# which has not been collected yet. This is an internal error.
# Required action: Contact support for assistance.
graphlayout.expert.message.6075E = CWZDF6075E: Model is not defined; the \
method should be called only after data has been collected.

# Scenario: This error occurs when a subgraph that is used as argument
# of a method is not part of the graph being analyzed.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6076E = CWZDF6076E: Subgraph is not a part of this graph.

# Scenario: This error occurs when analyzing the common ancestor
# of two nodes, but one of the nodes is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6077E = CWZDF6077E: Objects should not be null.

# Scenario: This error occurs when the value of the model argument
# is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6078E = CWZDF6078E: Invalid value for {0} argument.

# Scenario: This error occurs when the value of the property
# name argument is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6079E = CWZDF6079E: Invalid value for property name argument.

# Scenario: This error occurs when the value of the argument
# startNode is null.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6080E = CWZDF6080E: Invalid value for start node argument.

# Scenario: This error occurs when setting an element in an array
# to an index that is larger than the array capacity.
# Required action: Verify that the correct argument is used.
graphlayout.expert.message.6081E = CWZDF6081E: Index {0} cannot be larger \
than current capacity - 1 ({1}).

# Scenario: This error occurs when the absolute difference between 
# two angles, assomption made that alpha 1 is the start angle, 
# alpha2 is the end angle, and the interval is in trigonometric direction. 
# Assomption is also made that both angles are in 0 - 2PI.
# Required action: Verify that the correct arguments are used.
graphlayout.expert.message.6082E = CWZDF6082E: Angle must be from zero to 2pi. 


# Scenario: This error occurs when the representation of a link
# indicates that the link path is empty. This is an internal error.
# Required action: Contact support for assistance.
graphlayout.expert.message.6083E = CWZDF6083E: Path is empty. 

# Scenario: This error occurs when the number of nodes in a graph
# is invalid. This is an internal error.
# Required action: Contact support for assistance.
graphlayout.expert.message.6084E = CWZDF6084E: Bad number of nodes: {0}. 

# Scenario: This error occurs when the zoom factor of the matrix
# set in the view is invalid.
# Required action: Verify that the zoom factor is specified correctly.
graphlayout.expert.message.6085E = CWZDF6085E: Zoom factor is not allowed to be zero. 

# Scenario: This error occurs when trying to move nodes when just
# link routing is being performed.
# Required action: Verify that the custom layout algorithm is correctly implemented.
graphlayout.expert.message.6086E = CWZDF6086E: Link routing should not move nodes. 

# Scenario: This error occurs when building the topology of a graph
# prior to graph layout execution but an error has caused an
# inconsistency on the graph structures.
# Required action: Verify that the custom layout algorithm is correctly implemented.
graphlayout.expert.message.6087E = CWZDF6087E: There are more nodes in the graph than expected.

# Scenario: This error occurs when building the topology of a graph
# prior to graph layout execution but an error has caused an
# inconsistency on the graph structures.
# Required action: Verify that the custom layout algorithm is correctly implemented.
graphlayout.expert.message.6088E = CWZDF6088E: There are more links in the graph than expected.

# ---------------------------------------------------------------------------
# Generic layout parameter messages

# Scenario: This error occurs when a graph layout parameter is set
# that expects only one out of a fixed set of choices, but the provided
# value is not a valid choice.
# Required action: Verify that a valid value is used to set
# the layout parameter.
graphlayout.expert.message.6090E = CWZDF6090E: Illegal option: {0}.

# Scenario: This error occurs when a graph layout parameter is set
# that expects only a positive number but but the provided
# value is negative.
# Required action: Verify that a valid value is used to set
# the layout parameter.
graphlayout.expert.message.6091E = CWZDF6091E: Unsupported negative value: {0}.

# Scenario: This error occurs when a graph layout parameter is set
# to null that expects a non-null value.
# Required action: Verify that a valid value is used to set
# the layout parameter.
graphlayout.expert.message.6092E = CWZDF6092E: Unsupported null value.

# ---------------------------------------------------------------------------


# Scenario: This error occurs when the internal data structures of a
# graph layout algorithm are messed up. This indicates a bug in the library.
# Required action: Please report this bug to the product support.
graphlayout.expert.message.6150E = CWZDF6150E: Internal error {0}. Please report this bug to product support and explain how to reproduce the bug.


##########################
# com.ibm.mokylin.elixir.diagram.graphlayout (used only in Flex)


# Scenario: This is an internal error that occurs when
# the graph layout retrieves the bounds of a UIComponent
# and the returned rectangle has any NaN value.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6097E = CWZDF6097E: Internal error: bounds contain NaN: {0}.

# Scenario: This error occurs when trying to specify a invalid value
# for property coordinatesMode.
# Required action: Verify that the correct value is set to the property.
graphlayout.expert.message.6098E = CWZDF6098E: Unsupported coordinates mode: {0}.

# Scenario: This error occurs when trying to specify a null value
# for the class that handles geometry in the graph layout model implementation.
# Required action: Verify that the correct value is set to the property.
graphlayout.expert.message.6099E = CWZDF6099E: A geometry support must be already set.

# Scenario: This error occurs when the reference view has a zoom 
# factor of zero.
# Required action: Verify that the view has a valid zoom factor.
graphlayout.expert.message.6100E = CWZDF6100E: Zoom factor must not be zero. Matrix on reference view:{0}.

# Scenario: This error occurs when the argument that is passed to
# retrieve link information is not a Node.
# Required action: Verify that the correct arguments are used.
graphlayout.expert.message.6101E = CWZDF6101E: Argument is not a valid node: {0}.

# Scenario: This error occurs when the argument that is passed to
# retrieve link information is not a Node.
# Required action: Verify that the correct arguments are used.
graphlayout.expert.message.6102E = CWZDF6102E: Absolute link point must not be null.




##########################
# mokylin.views.graphlayout.rowcolumngrid (used by Grid and Bus Layout)
# Message Range: 6280-6299
###########################

# Scenario: This error occurs when you set the value of the
# property layoutMode in a Grid layout with an incorrect value.
# Required action: Verify that the value provided to property
# layoutMode in Grid layout is one of the possible values.
graphlayout.expert.message.6280E = CWZDF6280E: Invalid layout mode: {0}.

# Scenario: This error occurs when the processing of nodes in
# a graph to create a matrix for Grid Layout. It indicates that
# an internal error has occurred during this process.
# Required action: Verify that graph layout model are correct and
# that layout parameters are configured correctly.
graphlayout.expert.message.6281E = CWZDF6281E: Extra big floating node \
processed as normal big floating node (width = {0}).

# Scenario: This error occurs the indexes of the nodes are negative. 
# Required action: Verify that graph layout model is correct and
# that layout parameters are configured correctly.
graphlayout.expert.message.6282E = CWZDF6282E: Indexes cannot be negative, except for fixed nodes.

# Scenario: This error when the node is larger than the
# available space in the grid.
# Required action: Verify that graph layout model is correct and
# that layout parameters are configured correctly.
graphlayout.expert.message.6283E = CWZDF6283E: Extra large nodes must be left-aligned.

# Scenario: This error when the node is larger than the
# available space in the grid and the grid is configured to
# not allow nodes to be placed outside of its available area.
# Required action: Verify that graph layout model is correct and
# that layout parameters are configured correctly.
graphlayout.expert.message.6284E = CWZDF6284E: Cannot go outside available area.



##########################
# Generic


# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.9999E = CWZDF9999E: Internal error.




################################################################
# Property file for multiple layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout
# Message Range: 6450-6459
################################################################

# Scenario: This error occurs a graph layout model has not
# yet been attached to the first layout in a Multiple layout
# configuration.
# Required action: Verify that the graph layout model is 
# correctly attached to the first layout when using a Multiple layout.
graphlayout.expert.message.6450E = CWZDF6450E: Graph layout model on first layout cannot be null.

# Scenario: This error occurs a graph layout model has not
# yet been attached to the second layout in a Multiple layout
# configuration.
# Required action: Verify that the graph layout model is 
# correctly attached to the second layout when using a Multiple layout.
graphlayout.expert.message.6451E = CWZDF6451E: Graph layout model on second layout cannot be null.






################################################################
# Property file for random layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.random
# Message Range: 6460-6469
################################################################

# Scenario: This error occurs when a graph layout model contains
# null nodes.
# Required action: Verify that the graph layout model is 
# correct.
graphlayout.expert.message.6460E = CWZDF6460E: Null node retrieved from graph layout model.

# Scenario: This error occurs when an invalid value is set to
# the global link style parameter in Random Layout
# Required action: Verify that a valid value is used to set
# parameter global link style.
graphlayout.expert.message.6461E = CWZDF6461E: Unsupported global \
link style option in Random Layout. 






################################################################
# Property file for recursive layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout
# Message Range: 6675-6699
################################################################

# Scenario: This error occurs when a method of the class GraphLayout
# is used but the graph layout model attached to the graph layout
# instance has not been specified.
# Required action: Verify that a valid graph layout model is used.
graphlayout.expert.message.6675E = CWZDF6675E: No attached graph layout model or the graph layout model is null.

# Scenario: This error occurs when the layout provider instance which will
# return the layout instances used during a recursive layout has not been
# specified.
# Required action: Verify that a valid layout provider is specified. 
graphlayout.expert.message.6676E = CWZDF6676E: Layout provider cannot be null.


# Scenario: This error occurs when creating a recursive layout
# with a null reference layout.
# Required action: Verify that the correct value is used
# as argument for the method.
graphlayout.expert.message.6677E = CWZDF6677E: The reference layout cannot be null.

# Scenario: This error occurs when creating a recursive layout
# with another recursive layout as reference layout.
# Required action: Verify that the correct value is used
# as argument for the method.
graphlayout.expert.message.6678E = CWZDF6678E: A recursive layout cannot have \
another recursive layout as reference layout.

# Scenario: This error occurs invoking the method RecursiveLayout.setLayout
# for a recursive layout instance that is using a reference layout
# or a specified layout provider.
# Required action: Verify that the method is only used for recursive
# layout instances that are in internal layout provider mode.
graphlayout.expert.message.6679E = CWZDF6679E: The method setLayout can only \
be used in internal provider mode.

# Scenario: This error occurs invoking the method 
# for a recursive layout instance that is not yet attached to a
# graph layout model.
# Required action: Verify that a graph layout model is correctly
# attached to the recursive layout instance.
graphlayout.expert.message.6680E = CWZDF6680E: A graph layout model \
must be attached before you use the method {0}.

# Scenario: This error occurs specifying a layout to a subgraph
# which is not a MultipleLayout.
# Required action: Verify that the correct MultipleLayout instance
# is used when setting a layout to a subgraph in a RecursiveMultipleLayout.
graphlayout.expert.message.6681E = CWZDF6681E: An instance of \
MultipleLayout is expected when specifying a layout for subgraph.

# Scenario: This error occurs specifying an invalid value to a property.
# Required action: Verify that the correct value is used.
graphlayout.expert.message.6682E = CWZDF6682E: Illegal value {0} for {1} property.







################################################################
# Property file for tree layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.tree
# Message Range: 6700-6749
################################################################

# Scenario: This error occurs when the global link style
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout global link style.
graphlayout.expert.message.6700E = CWZDF6700E: Unsupported \
global link style in Tree Layout: {0}.

# Scenario: This error occurs when the connector style
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout connector style.
graphlayout.expert.message.6701E = CWZDF6701E: Unsupported \
connector style in Tree Layout: {0}.

# Scenario: This error occurs when the flow direction
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout flow direction.
graphlayout.expert.message.6702E = CWZDF6702E: Unsupported \
flow direction in Tree Layout: {0}.

# Scenario: This error occurs when the layout mode
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout layout mode.
graphlayout.expert.message.6703E = CWZDF6703E: Unsupported \
layout mode in Tree Layout: {0}.

# Scenario: This error occurs when the balloon angle spacing
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout balloon angle spacing.
graphlayout.expert.message.6704E = CWZDF6704E: Unsupported \
balloon angle spacing in Tree Layout: {0}.

# Scenario: This error occurs when the balloon radius mode
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout balloon radius mode.
graphlayout.expert.message.6705E = CWZDF6705E: Unsupported \
balloon radius mode in Tree Layout: {0}.

# Scenario: This error occurs when the level alignment
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout level alignment.
graphlayout.expert.message.6706E = CWZDF6706E: Unsupported \
level alignment in Tree Layout: {0}.

# Scenario: This error occurs when the global alignment
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout global alignment.
graphlayout.expert.message.6707E = CWZDF6707E: Unsupported \
global alignment in Tree Layout: {0}.

# Scenario: This error occurs when the sibling offset
# parameter is set to a negative value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout sibling offset.
graphlayout.expert.message.6708E = CWZDF6708E: Negative \
sibling offset in Tree Layout: {0}.

# Scenario: This error occurs when the parent-child offset
# parameter is set to a negative value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout parent-child offset.
graphlayout.expert.message.6709E = CWZDF6709E: Negative \
parent-child offset in Tree Layout: {0}.

# Scenario: This error occurs when the branch offset
# parameter is set to a negative value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout branch offset.
graphlayout.expert.message.6710E = CWZDF6710E: Negative \
branch offset in Tree Layout: {0}.

# Scenario: This error occurs when the tip-over branch offset
# parameter is set to a negative value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout tip-over branch offset.
graphlayout.expert.message.6711E = CWZDF6711E: Negative \
tip-over branch offset in Tree Layout: {0}.

# Scenario: This error occurs when the associate offset
# parameter is set to a negative value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout associate offset.
graphlayout.expert.message.6712E = CWZDF6712E: Negative \
associate offset in Tree Layout: {0}.

# Scenario: This error occurs when the parent-child associate offset
# parameter is set to a negative value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout parent-child associate offset.
graphlayout.expert.message.6713E = CWZDF6713E: Negative \
parent-child associate offset in Tree Layout: {0}.

# Scenario: This error occurs when the aspect
# parameter is set to a negative or zero value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout aspect offset.
graphlayout.expert.message.6714E = CWZDF6714E: Negative \
or zero aspect ratio in Tree Layout: {0}.

# Scenario: This error occurs when the individual link style
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout individual link style.
graphlayout.expert.message.6715E = CWZDF6715E: Unsupported \
individual link style in Tree Layout: {0}.

# Scenario: This error occurs when the individual alignment
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout individual alignment.
graphlayout.expert.message.6716E = CWZDF6716E: Unsupported \
individual alignment in Tree Layout: {0}.

# Scenario: This error occurs when the individual child alignment
# parameter is set to an invalid value in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout individual child alignment.
graphlayout.expert.message.6717E = CWZDF6717E: Unsupported \
individual child alignment in Tree Layout: {0}.

# Scenario: This error occurs when the side option used to
# specify the subtree block margin is invalid in Tree Layout 
# Required action: Verify that you have correctly configured
# the Tree Layout subtree block margin side.
graphlayout.expert.message.6718E = CWZDF6718E: Unsupported \
subtree block margin side option in Tree Layout: {0}.





################################################################
# Property file for uniform layout
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.forcedirected
# Message Range: 6750-6774
################################################################

# Could reduce all internal errors to just 1 message, using ID 6150
# which is used otherwhere as generic internal error message

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6750E = CWZDF6750E: Internal error: Unexpected self link found in abstract graph (1).

# Scenario: This error occurs when performing the the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6751E = CWZDF6751E: Internal error: \
Unexpected neighbor of sNode.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6752E = CWZDF6752E: Internal error: Unexpected self link found in abstract graph (2).

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6753E = CWZDF6753E: Found no free \
pNode for mNode {0}.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6754E = CWZDF6754E: Internal error: \
User data cannot be null on the pNode.

# Scenario: This error occurs when performing the layout algorithm. 
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6755E = CWZDF6755E: mNode can only be added to \
pNode or pNode with mNode.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6756E = CWZDF6756E: Unexpected \
null userData on pNode {0}.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6757E = CWZDF6757E: Coarsening \
did not reduce the number of nodes {0}.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6758E = CWZDF6758E: Node cannot \
be null.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6759E = CWZDF6759E: Unexpected null sNode.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6760E = CWZDF6760E: Unexpected null pNode.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6761E = CWZDF6761E: Self link must not occur in abstract graph.

# Scenario: This error occurs when performing the layout algorithm.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6762E = CWZDF6762E: Original layout \
cannot be null.

# Scenario: This error occurs when the algorithm can no longer
# identify whether nodes are fixed or not.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6763E = CWZDF6763E: Impossible to know if nodes are fixed or not.

# Scenario: This error occurs during execution of the layout algorithm
# in Fast-Multilevel model.
# Required action: This is an internal error. Contact
# support for assistance.
graphlayout.expert.message.6764E = CWZDF6764E: Internal \
error in fast multilevel support.

# Scenario: This error occurs when an invalid value is set
# to nodes placement parameter.
# Required action: Verify that the appropriate value is set.
graphlayout.expert.message.6765E = CWZDF6765E: Unsupported \
nodes placement algorithm option: {0}.
 
# Scenario: This error occurs if the layout algorithm was
# not able to create the required data structures.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6766E = CWZDF6766E: Internal error: \
Internal data structures have not been correctly created.

# Scenario: This error occurs when the layout algorithm is
# not able to reach convergence.
# Required action: Verify that all configuration is correctly
# set.
graphlayout.expert.message.6767E = CWZDF6767E: Cannot reach \
convergence.

# Scenario: This error occurs if the layout algorithm was
# not able to create the required data structures.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6768E = CWZDF6768E: Internal error \
(position data).

# Scenario: This error occurs when computing the length of the
# links in the layout algorithm.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6769E = CWZDF6769E: Internal error: Half diagonal vector not initialized.

# Scenario: This error occurs when the internal data structures
# that carry node information have not been correctly created.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6770E = CWZDF6770E: Internal error: The nodes have not been correctly created.

# Scenario: This error occurs when the layout mode parameter
# is set to an invalid value.
# Required action: Verify that a valid value is used to set
# the layout mode parameter.
graphlayout.expert.message.6771E = CWZDF6771E: Unsupported \
layout mode: {0}.

# Scenario: This error occurs when the number of iterations parameter
# is set to a negative value.
# Required action: Verify that a valid value is used to set
# the number of iterations parameter.
graphlayout.expert.message.6772E = CWZDF6772E: Number of \
iterations cannot be negative: {0}.

# Scenario: This error occurs when the link style parameter
# is set to an unsupported value.
# Required action: Verify that a valid value is used to set
# the link style parameter.
graphlayout.expert.message.6773E = CWZDF6773E: Unsupported \
link style: {0}.

# Scenario: This error occurs when the multilink mode parameter
# is set to an unsupported value.
# Required action: Verify that a valid value is used to set
# the multilink mode parameter.
graphlayout.expert.message.6774E = CWZDF6774E: Unsupported \
multilink mode: {0}.

# Scenario: This error occurs when the value of a spacing property is
# set to a negative value but this spacing property does not support
# negative values.
# Required action: Verify that the appropriate value is used.
graphlayout.expert.message.6775E= CWZDF6775E: Unsupported \
negative value: {0}.


################################################################
# Property file for generic quadtree 
################################################################
# com.ibm.mokylin.elixir.diagram.graphlayout.internalutil.genericquadtree
# Message Range: 6260-6279
################################################################

# Scenario: This is an internal error that occurs when
# an instance is created with an invalid parameter.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6260E = CWZDF6260E: Object interface \
argument cannot be null. 

# Scenario: This is an internal error that occurs when
# an object cannot be removed from an internal structure.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6261E = CWZDF6261E: Object was not \
removed.

# Scenario: This is an internal error that occurs when
# an object is added to a quadtree where it is already present.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6262E = CWZDF6262E: GenericQuadtree.add: Object {0} [{1}] is already in quadtree.

# Scenario: This is an internal error that occurs when
# an object is removed from a quadtree where it was not present.
# Required action: This is an internal error. Contact support
# for assistance.
graphlayout.expert.message.6263E = CWZDF6263E: GenericQuadtree.remove: Object {0} [{1}] is not in quadtree.
